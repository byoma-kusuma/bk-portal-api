# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input BoolFilter {
  equals: Boolean
  not: BoolFilter
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateRoleInput {
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTimeFilter
  notIn: [DateTime!]
}

input EnumTypeFilter {
  equals: Type
  in: [Type!]
  not: EnumTypeFilter
  notIn: [Type!]
}

input EnumUserStatusFilter {
  equals: UserStatus
  in: [UserStatus!]
  not: EnumUserStatusFilter
  notIn: [UserStatus!]
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createRole(createRoleInput: CreateRoleInput!): Role!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  removeRole(id: Int!): Role!
  signup(data: SignupInput!): Auth!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  updateUser(data: UpdateUserInput!): User!
}

input PasswordHistoryRelationFilter {
  is: PasswordHistoryWhereInput
  isNot: PasswordHistoryWhereInput
}

input PasswordHistoryWhereInput {
  AND: [PasswordHistoryWhereInput!]
  NOT: [PasswordHistoryWhereInput!]
  OR: [PasswordHistoryWhereInput!]
  createdAt: DateTimeFilter
  createdBy: StringFilter
  id: StringFilter
  isDeleted: BoolFilter
  password: StringFilter
  uniqueKey: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: StringFilter
  user: UserRelationFilter
  userId: StringFilter
}

type Query {
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  role(where: RoleWhereInput): Role!
  roles(where: RoleWhereInput): [Role!]!
}

type Role {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!

  """Identifies the date and time when the object was last updated."""
  isDeleted: Boolean!
  name: String!
  type: Role_Type!

  """Unique key associated with the object."""
  uniqueKey: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  users: [User!]!
}

input RoleRelationFilter {
  is: RoleWhereInput
  isNot: RoleWhereInput
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  createdAt: DateTimeFilter
  createdBy: StringFilter
  id: StringFilter
  isDeleted: BoolFilter
  name: StringFilter
  roleType: EnumTypeFilter
  uniqueKey: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: StringFilter
  users: UserListRelationFilter
}

"""Type of the role"""
enum Role_Type {
  DEFAULT
  SYSTEM
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

"""Current status of the user within the system"""
enum Status {
  VALIDATED
  VALIDATION_PENDING
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: StringFilter
  notIn: [String!]
  startsWith: String
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

enum Type {
  DEFAULT
  SYSTEM
}

input UpdateRoleInput {
  id: String!
  name: String
}

input UpdateUserInput {
  firstname: String
  lastname: String
  roleName: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstname: String
  id: ID!

  """Identifies the date and time when the object was last updated."""
  isDeleted: Boolean!
  lastname: String
  role: Role!
  status: Status!

  """Unique key associated with the object."""
  uniqueKey: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input UserDetailRelationFilter {
  is: UserDetailWhereInput
  isNot: UserDetailWhereInput
}

input UserDetailWhereInput {
  AND: [UserDetailWhereInput!]
  NOT: [UserDetailWhereInput!]
  OR: [UserDetailWhereInput!]
  avatar: StringFilter
  birthday: StringFilter
  company: StringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  createdBy: StringFilter
  id: StringFilter
  isDeleted: BoolFilter
  notes: StringFilter
  phoneNumber: StringFilter
  secondaryEmail: StringFilter
  steetAddress2: StringFilter
  streetAddress: StringFilter
  title: StringFilter
  uniqueKey: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: StringFilter
  user: UserRelationFilter
  userId: StringFilter
  zip: StringFilter
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserStatus {
  VALIDATED
  VALIDATION_PENDING
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  createdAt: DateTimeFilter
  createdBy: StringFilter
  detail: UserDetailRelationFilter
  email: StringFilter
  firstname: StringFilter
  id: StringFilter
  isDeleted: BoolFilter
  lastname: StringFilter
  password: StringFilter
  passwordHistory: PasswordHistoryRelationFilter
  role: RoleRelationFilter
  roleId: StringFilter
  status: EnumUserStatusFilter
  uniqueKey: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: StringFilter
}
